package com.example.valdea.tetris;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.support.annotation.Nullable;
import android.util.Log;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

public class TokenService extends Service {

    int token;
    final static int TIME_INTERVAL = 20;
    Intent intentToken;

    Handler tokenHandler = new Handler() {
        public void handleMessage(Message msg) {
            super.handleMessage(msg);

            Log.w("Token Handler", "Handler Active");
            String str = null;

            try {
                str = starInput();

                token = Integer.valueOf(str);
                if(token != 5) { token++; }

                starOutput();

                intentToken = new Intent("Token");
                intentToken.putExtra("TokenValue", token);
                sendBroadcast(intentToken);

            } catch (NullPointerException e) { tokenHandler.removeMessages(0); }

            // timerInterval 간격으로 재실행
            this.sendEmptyMessageDelayed(0, TIME_INTERVAL * 1000);
        }
    };

    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public void onCreate() {
        Log.w("Token Service", "Token onCreate()");
        String str = null;

        str = starInput();

        if(str.equals("-1")) {
            token = 5;
            starOutput();
        }
        else { token = Integer.valueOf(str); }

        intentToken = new Intent("Token");
        intentToken.putExtra("TokenValue", token);
        sendBroadcast(intentToken);

        super.onCreate();
    }

    @Override
    public void onDestroy() {
        Log.w("Token Service", "Token onDestroy()");
        tokenHandler.removeMessages(0);

        super.onDestroy();
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        intentToken = intent;

        if(intent == null){
            return Service.START_STICKY;
        }else{
            tokenHandler.sendEmptyMessage(0);
        }

        return super.onStartCommand(intent, flags, startId);
    }

    public String starInput() {
        FileInputStream inFs;
        String str = null;
        try {
            inFs = openFileInput("Star.txt");
            byte[] txt = new byte[500];
            inFs.read(txt);
            inFs.close();
            str = (new String(txt)).trim();

            return str;
        } catch (IOException e) { return null; }
    }

    public void starOutput() {
        FileOutputStream outFs;
        try {
            outFs = openFileOutput("Star.txt", Context.MODE_PRIVATE);
            outFs.write(String.valueOf(token).getBytes());
            outFs.close();
        } catch (IOException e) { }
    }
}
