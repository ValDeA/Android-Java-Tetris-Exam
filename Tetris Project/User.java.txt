package com.example.valdea.tetris;

import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ViewFlipper;

public class User extends AppCompatActivity {

    // 위젯 변수 선언
    ViewFlipper vf;
    EditText id, pass, regEditID, regEditPass, confirmPass;
    Button login, regist, back, submit;

    // 데이터베이스 선언
    UserInfo userDB = new UserInfo(this);
    SQLiteDatabase sqlDb;
    Cursor cs;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.userinfo);
        setTitle("Login Page");

        // 위젯 변수 매치
        id = (EditText) findViewById(R.id.editID);
        pass = (EditText) findViewById(R.id.editPass);
        regEditID = (EditText) findViewById(R.id.registID);
        regEditPass = (EditText) findViewById(R.id.registPass);
        confirmPass = (EditText) findViewById(R.id.againPass);
        login = (Button) findViewById(R.id.btnLogin);
        regist = (Button) findViewById(R.id.btnRegist);
        submit = (Button) findViewById(R.id.btnSubmit);
        back = (Button) findViewById(R.id.btnBack);
        vf = (ViewFlipper) findViewById(R.id.loginVF);

        // 로그인 처리
        login.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String pID = id.getText().toString();
                String pPass = pass.getText().toString();

                sqlDb = userDB.getReadableDatabase();
                cs = sqlDb.rawQuery("SELECT * FROM userDB WHERE ID='" + pID + "' AND Passwd='" + pPass + "';", null);

                String result = null;

                while (cs.moveToNext()) {
                    result = cs.getString(0);
                }

                cs.close();
                sqlDb.close();

                // 아이디 혹은 패스워드가 틀렸다면
                if(result == null) {
                    AlertDialog.Builder dlg = new AlertDialog.Builder(User.this);
                    dlg.setTitle("ID 혹은 Password를 확인하세요!");
                    dlg.setNegativeButton("확인", null);
                    dlg.show();

                    // 둘 모두 일치한다면
                } else {
                    Intent loginIntent = new Intent(getApplicationContext(), MainActivity.class);
                    loginIntent.putExtra("Login", result);
                    startActivity(loginIntent);
                    finish();
                }
            }
        });

        // 가입 처리
        submit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String pID = regEditID.getText().toString();
                String pPass = regEditPass.getText().toString();
                String pConPass = confirmPass.getText().toString();

                AlertDialog.Builder dlg;

                // 입력 값 부족 여부
                if (pID.equals("") || pPass == null || pConPass == null) {
                    dlg = new AlertDialog.Builder(User.this);
                    dlg.setTitle("빈칸없이 모두 입력하세요!");
                    dlg.setNegativeButton("확인", null);
                    // 두 개의 패스워드 일치 여부
                } else if (!pPass.equals(pConPass)) {
                    dlg = new AlertDialog.Builder(User.this);
                    dlg.setTitle("두 비밀번호가 일치하지 않습니다!");
                    dlg.setNegativeButton("확인", null);
                } else {
                    sqlDb = userDB.getReadableDatabase();
                    cs = sqlDb.rawQuery("SELECT * FROM userDB WHERE ID='" + pID + "';", null);

                    String resultID = null;

                    while (cs.moveToNext()) {
                        resultID = cs.getString(0);
                    }

                    cs.close();
                    sqlDb.close();

                    // ID 중복 여부
                    if(resultID != null) {
                        dlg = new AlertDialog.Builder(User.this);
                        dlg.setTitle("중복된 ID 입니다!");
                        dlg.setNegativeButton("확인", null);
                    } else {
                        sqlDb = userDB.getWritableDatabase();
                        sqlDb.execSQL("INSERT INTO userDB VALUES( '" + pID + "', '" + pPass + "');");
                        sqlDb.close();

                        dlg = new AlertDialog.Builder(User.this);
                        dlg.setTitle("가입이 완료되었습니다!");
                        dlg.setNegativeButton("확인", null);
                        vf.showPrevious();
                    }
                }
                dlg.show();
            }
        });

        regist.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                vf.showNext();
            }
        });
        back.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                vf.showPrevious();
            }
        });
    }

    /* DataBase 메소드 */
    public class UserInfo extends SQLiteOpenHelper {
        public UserInfo(Context context) {
            super(context, "userDB", null, 1);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            db.execSQL("CREATE TABLE userDB ( ID CHAR(20), Passwd CHAR(20));");
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            db.execSQL("DROP TABLE IF EXISTS userDB");
            onCreate(db);
        }
    }
}
